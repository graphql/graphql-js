{"version":3,"file":"groupBy.js","sourceRoot":"","sources":["../../src/jsutils/groupBy.ts"],"names":[],"mappings":";;AAKA,0BASC;AAdD,2DAAqD;AAErD;;GAEG;AACH,SAAgB,OAAO,CACrB,IAAsB,EACtB,KAAqB;IAErB,MAAM,MAAM,GAAG,IAAI,kCAAc,EAAQ,CAAC;IAC1C,KAAK,MAAM,IAAI,IAAI,IAAI,EAAE,CAAC;QACxB,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IAChC,CAAC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["import { AccumulatorMap } from './AccumulatorMap.js';\n\n/**\n * Groups array items into a Map, given a function to produce grouping key.\n */\nexport function groupBy<K, T>(\n  list: ReadonlyArray<T>,\n  keyFn: (item: T) => K,\n): Map<K, ReadonlyArray<T>> {\n  const result = new AccumulatorMap<K, T>();\n  for (const item of list) {\n    result.add(keyFn(item), item);\n  }\n  return result;\n}\n"]}