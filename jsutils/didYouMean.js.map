{"version":3,"file":"didYouMean.js","sourceRoot":"","sources":["../../src/jsutils/didYouMean.ts"],"names":[],"mappings":";;AAYA,gCAqBC;AAjCD,mDAAyC;AAEzC,MAAM,eAAe,GAAG,CAAC,CAAC;AAU1B,SAAgB,UAAU,CACxB,QAAwC,EACxC,SAAiC;IAEjC,MAAM,CAAC,UAAU,EAAE,WAAW,CAAC,GAAG,SAAS;QACzC,CAAC,CAAC,CAAC,QAAkB,EAAE,SAAS,CAAC;QACjC,CAAC,CAAC,CAAC,SAAS,EAAE,QAAiC,CAAC,CAAC;IAEnD,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAC7B,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,IAAI,OAAO,GAAG,gBAAgB,CAAC;IAC/B,IAAI,UAAU,IAAI,IAAI,EAAE,CAAC;QACvB,OAAO,IAAI,UAAU,GAAG,GAAG,CAAC;IAC9B,CAAC;IAED,MAAM,cAAc,GAAG,IAAA,sBAAM,EAC3B,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAC3D,CAAC;IACF,OAAO,OAAO,GAAG,cAAc,GAAG,GAAG,CAAC;AACxC,CAAC","sourcesContent":["import { orList } from './formatList.js';\n\nconst MAX_SUGGESTIONS = 5;\n\n/**\n * Given [ A, B, C ] return ' Did you mean A, B, or C?'.\n */\nexport function didYouMean(suggestions: ReadonlyArray<string>): string;\nexport function didYouMean(\n  subMessage: string,\n  suggestions: ReadonlyArray<string>,\n): string;\nexport function didYouMean(\n  firstArg: string | ReadonlyArray<string>,\n  secondArg?: ReadonlyArray<string>,\n) {\n  const [subMessage, suggestions] = secondArg\n    ? [firstArg as string, secondArg]\n    : [undefined, firstArg as ReadonlyArray<string>];\n\n  if (suggestions.length === 0) {\n    return '';\n  }\n\n  let message = ' Did you mean ';\n  if (subMessage != null) {\n    message += subMessage + ' ';\n  }\n\n  const suggestionList = orList(\n    suggestions.slice(0, MAX_SUGGESTIONS).map((x) => `\"${x}\"`),\n  );\n  return message + suggestionList + '?';\n}\n"]}