{"version":3,"file":"AbortSignalListener.js","sourceRoot":"","sources":["../../src/execution/AbortSignalListener.ts"],"names":[],"mappings":"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","sourcesContent":["import { promiseWithResolvers } from '../jsutils/promiseWithResolvers.js';\n\n/**\n * A AbortSignalListener object can be used to trigger multiple responses\n * in response to a single AbortSignal.\n *\n * @internal\n */\nexport class AbortSignalListener {\n  abortSignal: AbortSignal;\n  abort: () => void;\n\n  private _onAborts: Set<() => void>;\n\n  constructor(abortSignal: AbortSignal) {\n    this.abortSignal = abortSignal;\n    this._onAborts = new Set<() => void>();\n    this.abort = () => {\n      for (const abort of this._onAborts) {\n        abort();\n      }\n    };\n\n    abortSignal.addEventListener('abort', this.abort);\n  }\n\n  add(onAbort: () => void): void {\n    this._onAborts.add(onAbort);\n  }\n\n  delete(onAbort: () => void): void {\n    this._onAborts.delete(onAbort);\n  }\n\n  disconnect(): void {\n    this.abortSignal.removeEventListener('abort', this.abort);\n  }\n}\n\nexport function cancellablePromise<T>(\n  originalPromise: Promise<T>,\n  abortSignalListener: AbortSignalListener,\n): Promise<T> {\n  const abortSignal = abortSignalListener.abortSignal;\n  if (abortSignal.aborted) {\n    // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n    return Promise.reject(abortSignal.reason);\n  }\n\n  const { promise, resolve, reject } = promiseWithResolvers<T>();\n  const onAbort = () => reject(abortSignal.reason);\n  abortSignalListener.add(onAbort);\n  originalPromise.then(\n    (resolved) => {\n      abortSignalListener.delete(onAbort);\n      resolve(resolved);\n    },\n    (error: unknown) => {\n      abortSignalListener.delete(onAbort);\n      reject(error);\n    },\n  );\n\n  return promise;\n}\n\nexport function cancellableIterable<T>(\n  iterable: AsyncIterable<T>,\n  abortSignalListener: AbortSignalListener,\n): AsyncIterable<T> {\n  const iterator = iterable[Symbol.asyncIterator]();\n\n  const _next = iterator.next.bind(iterator);\n\n  if (iterator.return) {\n    const _return = iterator.return.bind(iterator);\n\n    return {\n      [Symbol.asyncIterator]: () => ({\n        next: () => cancellablePromise(_next(), abortSignalListener),\n        return: () => cancellablePromise(_return(), abortSignalListener),\n      }),\n    };\n  }\n\n  return {\n    [Symbol.asyncIterator]: () => ({\n      next: () => cancellablePromise(_next(), abortSignalListener),\n    }),\n  };\n}\n"]}