{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * GraphQL.js provides a reference implementation for the GraphQL specification\n * but is also a useful utility for operating on GraphQL files and building\n * sophisticated tools.\n *\n * This primary module exports a general purpose function for fulfilling all\n * steps of the GraphQL specification in a single operation, but also includes\n * utilities for every part of the GraphQL specification:\n *\n *   - Parsing the GraphQL language.\n *   - Building a GraphQL type schema.\n *   - Validating a GraphQL request against a type schema.\n *   - Executing a GraphQL request against a type schema.\n *\n * This also includes utility functions for operating on GraphQL types and\n * GraphQL documents to facilitate building tools.\n *\n * You may also import from each sub-directory directly. For example, the\n * following two import statements are equivalent:\n *\n * ```ts\n * import { parse } from 'graphql';\n * import { parse } from 'graphql/language';\n * ```\n *\n * @packageDocumentation\n */\n\n// The GraphQL.js version info.\nexport { version, versionInfo } from './version.js';\n\n// The primary entry point into fulfilling a GraphQL request.\nexport type { GraphQLArgs } from './graphql.js';\nexport { graphql, graphqlSync } from './graphql.js';\n\n// Create and operate on GraphQL type definitions and schema.\nexport type {\n  GraphQLField,\n  GraphQLArgument,\n  GraphQLEnumValue,\n  GraphQLInputField,\n} from './type/index.js';\nexport {\n  resolveObjMapThunk,\n  resolveReadonlyArrayThunk,\n  // Definitions\n  GraphQLSchema,\n  GraphQLDirective,\n  GraphQLScalarType,\n  GraphQLObjectType,\n  GraphQLInterfaceType,\n  GraphQLUnionType,\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLList,\n  GraphQLNonNull,\n  // Standard GraphQL Scalars\n  specifiedScalarTypes,\n  GraphQLInt,\n  GraphQLFloat,\n  GraphQLString,\n  GraphQLBoolean,\n  GraphQLID,\n  // Int boundaries constants\n  GRAPHQL_MAX_INT,\n  GRAPHQL_MIN_INT,\n  // Built-in Directives defined by the Spec\n  specifiedDirectives,\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n  GraphQLDeferDirective,\n  GraphQLStreamDirective,\n  GraphQLDeprecatedDirective,\n  GraphQLSpecifiedByDirective,\n  GraphQLOneOfDirective,\n  // \"Enum\" of Type Kinds\n  TypeKind,\n  // Constant Deprecation Reason\n  DEFAULT_DEPRECATION_REASON,\n  // GraphQL Types for introspection.\n  introspectionTypes,\n  __Schema,\n  __Directive,\n  __DirectiveLocation,\n  __Type,\n  __Field,\n  __InputValue,\n  __EnumValue,\n  __TypeKind,\n  // Meta-field definitions.\n  SchemaMetaFieldDef,\n  TypeMetaFieldDef,\n  TypeNameMetaFieldDef,\n  // Predicates\n  isSchema,\n  isDirective,\n  isType,\n  isScalarType,\n  isObjectType,\n  isField,\n  isArgument,\n  isInterfaceType,\n  isUnionType,\n  isEnumType,\n  isEnumValue,\n  isInputObjectType,\n  isInputField,\n  isListType,\n  isNonNullType,\n  isInputType,\n  isOutputType,\n  isLeafType,\n  isCompositeType,\n  isAbstractType,\n  isWrappingType,\n  isNullableType,\n  isNamedType,\n  isRequiredArgument,\n  isRequiredInputField,\n  isSpecifiedScalarType,\n  isIntrospectionType,\n  isSpecifiedDirective,\n  // Assertions\n  assertSchema,\n  assertDirective,\n  assertType,\n  assertScalarType,\n  assertObjectType,\n  assertField,\n  assertArgument,\n  assertInterfaceType,\n  assertUnionType,\n  assertEnumType,\n  assertEnumValue,\n  assertInputObjectType,\n  assertInputField,\n  assertListType,\n  assertNonNullType,\n  assertInputType,\n  assertOutputType,\n  assertLeafType,\n  assertCompositeType,\n  assertAbstractType,\n  assertWrappingType,\n  assertNullableType,\n  assertNamedType,\n  // Un-modifiers\n  getNullableType,\n  getNamedType,\n  // Validate GraphQL schema.\n  validateSchema,\n  assertValidSchema,\n  // Upholds the spec rules about naming.\n  assertName,\n  assertEnumValueName,\n} from './type/index.js';\n\nexport type {\n  GraphQLType,\n  GraphQLInputType,\n  GraphQLOutputType,\n  GraphQLLeafType,\n  GraphQLCompositeType,\n  GraphQLAbstractType,\n  GraphQLWrappingType,\n  GraphQLNullableType,\n  GraphQLNullableInputType,\n  GraphQLNullableOutputType,\n  GraphQLNamedType,\n  GraphQLNamedInputType,\n  GraphQLNamedOutputType,\n  ThunkReadonlyArray,\n  ThunkObjMap,\n  GraphQLSchemaConfig,\n  GraphQLSchemaExtensions,\n  GraphQLDirectiveConfig,\n  GraphQLDirectiveExtensions,\n  GraphQLArgumentConfig,\n  GraphQLArgumentExtensions,\n  GraphQLEnumTypeConfig,\n  GraphQLEnumTypeExtensions,\n  GraphQLEnumValueConfig,\n  GraphQLEnumValueConfigMap,\n  GraphQLEnumValueExtensions,\n  GraphQLFieldConfig,\n  GraphQLFieldConfigArgumentMap,\n  GraphQLFieldConfigMap,\n  GraphQLFieldExtensions,\n  GraphQLFieldMap,\n  GraphQLFieldResolver,\n  GraphQLInputFieldConfig,\n  GraphQLInputFieldConfigMap,\n  GraphQLInputFieldExtensions,\n  GraphQLInputFieldMap,\n  GraphQLInputObjectTypeConfig,\n  GraphQLInputObjectTypeExtensions,\n  GraphQLInterfaceTypeConfig,\n  GraphQLInterfaceTypeExtensions,\n  GraphQLIsTypeOfFn,\n  GraphQLObjectTypeConfig,\n  GraphQLObjectTypeExtensions,\n  GraphQLResolveInfo,\n  ResponsePath,\n  GraphQLScalarTypeConfig,\n  GraphQLScalarTypeExtensions,\n  GraphQLTypeResolver,\n  GraphQLUnionTypeConfig,\n  GraphQLUnionTypeExtensions,\n  GraphQLScalarSerializer,\n  GraphQLScalarValueParser,\n  GraphQLScalarLiteralParser,\n  GraphQLScalarOutputValueCoercer,\n  GraphQLScalarInputValueCoercer,\n  GraphQLScalarInputLiteralCoercer,\n  GraphQLDefaultInput,\n} from './type/index.js';\n\n// Parse and operate on GraphQL language source files.\n// @see https://github.com/typescript-eslint/typescript-eslint/issues/10313\n// eslint-disable-next-line @typescript-eslint/consistent-type-exports\nexport { Kind } from './language/kinds.js';\nexport {\n  Token,\n  Source,\n  Location,\n  OperationTypeNode,\n  getLocation,\n  // Print source location.\n  printLocation,\n  printSourceLocation,\n  // Lex\n  Lexer,\n  TokenKind,\n  // Parse\n  parse,\n  parseValue,\n  parseConstValue,\n  parseType,\n  // Print\n  print,\n  // Visit\n  visit,\n  visitInParallel,\n  getEnterLeaveForKind,\n  BREAK,\n  DirectiveLocation,\n  // Predicates\n  isDefinitionNode,\n  isExecutableDefinitionNode,\n  isSelectionNode,\n  isValueNode,\n  isConstValueNode,\n  isTypeNode,\n  isTypeSystemDefinitionNode,\n  isTypeDefinitionNode,\n  isTypeSystemExtensionNode,\n  isTypeExtensionNode,\n} from './language/index.js';\n\nexport type {\n  ParseOptions,\n  SourceLocation,\n  // Visitor utilities\n  ASTVisitor,\n  ASTVisitFn,\n  ASTVisitorKeyMap,\n  // AST nodes\n  ASTNode,\n  ASTKindToNode,\n  // Each kind of AST node\n  NameNode,\n  DocumentNode,\n  DefinitionNode,\n  ExecutableDefinitionNode,\n  OperationDefinitionNode,\n  VariableDefinitionNode,\n  VariableNode,\n  SelectionSetNode,\n  SelectionNode,\n  FieldNode,\n  ArgumentNode,\n  FragmentArgumentNode,\n  ConstArgumentNode,\n  FragmentSpreadNode,\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n  ValueNode,\n  ConstValueNode,\n  IntValueNode,\n  FloatValueNode,\n  StringValueNode,\n  BooleanValueNode,\n  NullValueNode,\n  EnumValueNode,\n  ListValueNode,\n  ConstListValueNode,\n  ObjectValueNode,\n  ConstObjectValueNode,\n  ObjectFieldNode,\n  ConstObjectFieldNode,\n  DirectiveNode,\n  ConstDirectiveNode,\n  TypeNode,\n  NamedTypeNode,\n  ListTypeNode,\n  NonNullTypeNode,\n  TypeSystemDefinitionNode,\n  SchemaDefinitionNode,\n  OperationTypeDefinitionNode,\n  TypeDefinitionNode,\n  ScalarTypeDefinitionNode,\n  ObjectTypeDefinitionNode,\n  FieldDefinitionNode,\n  InputValueDefinitionNode,\n  InterfaceTypeDefinitionNode,\n  UnionTypeDefinitionNode,\n  EnumTypeDefinitionNode,\n  EnumValueDefinitionNode,\n  InputObjectTypeDefinitionNode,\n  DirectiveDefinitionNode,\n  TypeSystemExtensionNode,\n  SchemaExtensionNode,\n  TypeExtensionNode,\n  ScalarTypeExtensionNode,\n  ObjectTypeExtensionNode,\n  InterfaceTypeExtensionNode,\n  UnionTypeExtensionNode,\n  EnumTypeExtensionNode,\n  InputObjectTypeExtensionNode,\n} from './language/index.js';\n\n// Execute GraphQL queries.\nexport {\n  execute,\n  executeQueryOrMutationOrSubscriptionEvent,\n  executeSubscriptionEvent,\n  experimentalExecuteIncrementally,\n  experimentalExecuteQueryOrMutationOrSubscriptionEvent,\n  executeSync,\n  defaultFieldResolver,\n  defaultTypeResolver,\n  responsePathAsArray,\n  getArgumentValues,\n  getVariableValues,\n  getDirectiveValues,\n  subscribe,\n  createSourceEventStream,\n} from './execution/index.js';\n\nexport type {\n  ExecutionArgs,\n  ValidatedExecutionArgs,\n  ExecutionResult,\n  ExperimentalIncrementalExecutionResults,\n  InitialIncrementalExecutionResult,\n  SubsequentIncrementalExecutionResult,\n  IncrementalDeferResult,\n  IncrementalStreamResult,\n  IncrementalResult,\n  FormattedExecutionResult,\n  FormattedInitialIncrementalExecutionResult,\n  FormattedSubsequentIncrementalExecutionResult,\n  FormattedIncrementalDeferResult,\n  FormattedIncrementalStreamResult,\n  FormattedIncrementalResult,\n} from './execution/index.js';\n\n// Validate GraphQL documents.\nexport {\n  validate,\n  ValidationContext,\n  // All validation rules in the GraphQL Specification.\n  specifiedRules,\n  recommendedRules,\n  // Individual validation rules.\n  ExecutableDefinitionsRule,\n  FieldsOnCorrectTypeRule,\n  FragmentsOnCompositeTypesRule,\n  KnownArgumentNamesRule,\n  KnownDirectivesRule,\n  KnownFragmentNamesRule,\n  KnownOperationTypesRule,\n  KnownTypeNamesRule,\n  LoneAnonymousOperationRule,\n  NoFragmentCyclesRule,\n  NoUndefinedVariablesRule,\n  NoUnusedFragmentsRule,\n  NoUnusedVariablesRule,\n  OverlappingFieldsCanBeMergedRule,\n  PossibleFragmentSpreadsRule,\n  ProvidedRequiredArgumentsRule,\n  ScalarLeafsRule,\n  SingleFieldSubscriptionsRule,\n  UniqueArgumentNamesRule,\n  UniqueDirectivesPerLocationRule,\n  UniqueFragmentNamesRule,\n  UniqueInputFieldNamesRule,\n  UniqueOperationNamesRule,\n  UniqueVariableNamesRule,\n  ValuesOfCorrectTypeRule,\n  VariablesAreInputTypesRule,\n  VariablesInAllowedPositionRule,\n  MaxIntrospectionDepthRule,\n  // SDL-specific validation rules\n  LoneSchemaDefinitionRule,\n  UniqueOperationTypesRule,\n  UniqueTypeNamesRule,\n  UniqueEnumValueNamesRule,\n  UniqueFieldDefinitionNamesRule,\n  UniqueArgumentDefinitionNamesRule,\n  UniqueDirectiveNamesRule,\n  PossibleTypeExtensionsRule,\n  // Custom validation rules\n  NoDeprecatedCustomRule,\n  NoSchemaIntrospectionCustomRule,\n} from './validation/index.js';\n\nexport type { ValidationRule } from './validation/index.js';\n\n// Create, format, and print GraphQL errors.\nexport { GraphQLError, syntaxError, locatedError } from './error/index.js';\n\nexport type {\n  GraphQLErrorOptions,\n  GraphQLFormattedError,\n  GraphQLErrorExtensions,\n  GraphQLFormattedErrorExtensions,\n} from './error/index.js';\n\n// Utilities for operating on GraphQL type schema and parsed sources.\nexport {\n  // Produce the GraphQL query recommended for a full schema introspection.\n  // Accepts optional IntrospectionOptions.\n  getIntrospectionQuery,\n  // Gets the target Operation from a Document.\n  getOperationAST,\n  // Convert a GraphQLSchema to an IntrospectionQuery.\n  introspectionFromSchema,\n  // Build a GraphQLSchema from an introspection result.\n  buildClientSchema,\n  // Build a GraphQLSchema from a parsed GraphQL Schema language AST.\n  buildASTSchema,\n  // Build a GraphQLSchema from a GraphQL schema language document.\n  buildSchema,\n  // Extends an existing GraphQLSchema from a parsed GraphQL Schema language AST.\n  extendSchema,\n  // Sort a GraphQLSchema.\n  lexicographicSortSchema,\n  // Print a GraphQLSchema to GraphQL Schema language.\n  printSchema,\n  // Print a GraphQLType to GraphQL Schema language.\n  printType,\n  // Print a GraphQLDirective to GraphQL Schema language.\n  printDirective,\n  // Prints the built-in introspection schema in the Schema Language format.\n  printIntrospectionSchema,\n  // Create a GraphQLType from a GraphQL language AST.\n  typeFromAST,\n  // Create a JavaScript value from a GraphQL language AST with a Type.\n  /** @deprecated use `coerceInputLiteral()` instead - will be removed in v18 */\n  valueFromAST,\n  // Create a JavaScript value from a GraphQL language AST without a Type.\n  valueFromASTUntyped,\n  // Create a GraphQL language AST from a JavaScript value.\n  /** @deprecated use `valueToLiteral()` instead with care to operate on external values - `astFromValue()` will be removed in v18 */\n  astFromValue,\n  // A helper to use within recursive-descent visitors which need to be aware of the GraphQL type system.\n  TypeInfo,\n  visitWithTypeInfo,\n  // Converts a value to a const value by replacing variables.\n  replaceVariables,\n  // Create a GraphQL literal (AST) from a JavaScript input value.\n  valueToLiteral,\n  // Coerces a JavaScript value to a GraphQL type, or returns undefined.\n  coerceInputValue,\n  // Coerces a GraphQL literal (AST) to a GraphQL type, or returns undefined.\n  coerceInputLiteral,\n  // Validate a JavaScript value with a GraphQL type, collecting all errors.\n  validateInputValue,\n  // Validate a GraphQL literal (AST) with a GraphQL type, collecting all errors.\n  validateInputLiteral,\n  // Concatenates multiple AST together.\n  concatAST,\n  // Separates an AST into an AST per Operation.\n  separateOperations,\n  // Strips characters that are not significant to the validity or execution of a GraphQL document.\n  stripIgnoredCharacters,\n  // Comparators for types\n  isEqualType,\n  isTypeSubTypeOf,\n  doTypesOverlap,\n  // Compares two GraphQLSchemas and detects breaking changes.\n  BreakingChangeType,\n  DangerousChangeType,\n  SafeChangeType,\n  findBreakingChanges,\n  findDangerousChanges,\n  findSchemaChanges,\n} from './utilities/index.js';\n\nexport type {\n  IntrospectionOptions,\n  IntrospectionQuery,\n  IntrospectionSchema,\n  IntrospectionType,\n  IntrospectionInputType,\n  IntrospectionOutputType,\n  IntrospectionScalarType,\n  IntrospectionObjectType,\n  IntrospectionInterfaceType,\n  IntrospectionUnionType,\n  IntrospectionEnumType,\n  IntrospectionInputObjectType,\n  IntrospectionTypeRef,\n  IntrospectionInputTypeRef,\n  IntrospectionOutputTypeRef,\n  IntrospectionNamedTypeRef,\n  IntrospectionListTypeRef,\n  IntrospectionNonNullTypeRef,\n  IntrospectionField,\n  IntrospectionInputValue,\n  IntrospectionEnumValue,\n  IntrospectionDirective,\n  BuildSchemaOptions,\n  BreakingChange,\n  SafeChange,\n  DangerousChange,\n  TypedQueryDocumentNode,\n} from './utilities/index.js';\n"]}