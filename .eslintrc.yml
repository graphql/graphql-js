parser: babel-eslint
plugins:
  - flowtype
  - prettier
env:
  es6: true
  node: true
parserOptions:
  arrowFunctions: true
  binaryLiterals: true
  blockBindings: true
  classes: true
  defaultParams: true
  destructuring: true
  experimentalObjectRestSpread: true
  forOf: true
  generators: true
  globalReturn: true
  jsx: true
  modules: true
  objectLiteralComputedProperties: true
  objectLiteralDuplicateProperties: true
  objectLiteralShorthandMethods: true
  objectLiteralShorthandProperties: true
  octalLiterals: true
  regexUFlag: true
  regexYFlag: true
  restParams: true
  spread: true
  superInFunctions: true
  templateStrings: true
  unicodeCodePointEscapes: true

rules:
  # https://github.com/prettier/eslint-plugin-prettier#installation
  prettier/prettier: error

  # `eslint-plugin-flowtype` rule list based on `v2.50.0`
  # https://github.com/gajus/eslint-plugin-flowtype#eslint-plugin-flowtype

  flowtype/define-flow-type: error
  flowtype/no-weak-types: [error, {any: false}]
  flowtype/semi: off
  flowtype/space-after-type-colon: off
  flowtype/space-before-generic-bracket: off
  flowtype/space-before-type-colon: off
  flowtype/union-intersection-spacing: off
  flowtype/use-flow-type: error

  # Possible Errors
  # https://eslint.org/docs/rules/#possible-errors

  no-await-in-loop: error
  no-cond-assign: error
  no-console: warn
  no-constant-condition: error
  no-control-regex: off
  no-debugger: warn
  no-dupe-args: error
  no-dupe-keys: error
  no-duplicate-case: error
  no-empty: error
  no-empty-character-class: error
  no-ex-assign: error
  no-extra-boolean-cast: error
  no-extra-parens: off
  no-extra-semi: off
  no-func-assign: error
  no-inner-declarations: [error, functions]
  no-invalid-regexp: error
  no-irregular-whitespace: error
  no-obj-calls: error
  no-regex-spaces: error
  no-sparse-arrays: error
  no-unexpected-multiline: off
  no-unreachable: error
  no-unsafe-negation: error
  use-isnan: error
  valid-jsdoc: off
  valid-typeof: error

  # Best Practices
  # https://eslint.org/docs/rules/#best-practices

  block-scoped-var: off
  complexity: off
  consistent-return: off
  curly: [error, all]
  default-case: off
  dot-location: off
  dot-notation: off
  eqeqeq: [error, smart]
  guard-for-in: error
  no-alert: error
  no-caller: error
  no-div-regex: error
  no-else-return: error
  no-eq-null: off
  no-eval: error
  no-extend-native: error
  no-extra-bind: error
  no-fallthrough: error
  no-floating-decimal: off
  no-implicit-coercion: error
  no-implied-eval: error
  no-invalid-this: off
  no-iterator: error
  no-labels: [error, {allowLoop: true}]
  no-lone-blocks: error
  no-loop-func: off
  no-multi-spaces: off
  no-multi-str: error
  no-new: error
  no-new-func: off
  no-new-wrappers: error
  no-octal: error
  no-octal-escape: error
  no-param-reassign: error
  no-proto: error
  no-redeclare: error
  no-return-assign: error
  no-script-url: error
  no-self-compare: off
  no-sequences: off
  no-throw-literal: error
  no-unused-expressions: error
  no-useless-call: error
  no-useless-escape: error
  no-useless-return: error
  no-void: error
  no-warning-comments: off
  no-with: error
  radix: error
  vars-on-top: off
  wrap-iife: off
  yoda: [error, never, {exceptRange: true}]

  # Strict Mode
  # https://eslint.org/docs/rules/#strict-mode

  strict: off

  # Variables
  # https://eslint.org/docs/rules/#variables

  init-declarations: off
  no-delete-var: error
  no-label-var: error
  no-shadow: error
  no-shadow-restricted-names: error
  no-undef: error
  no-undef-init: error
  no-undefined: off
  no-unused-vars: [error, {vars: all, args: after-used, argsIgnorePattern: "^_"}]
  no-use-before-define: off

  # Node.js and CommonJS
  # https://eslint.org/docs/rules/#nodejs-and-commonjs

  callback-return: error
  handle-callback-err: [error, error]
  no-mixed-requires: [error, true]
  no-new-require: error
  no-path-concat: error
  no-process-env: off
  no-process-exit: off
  no-restricted-modules: off
  no-sync: error

  # Stylistic Issues
  # https://eslint.org/docs/rules/#stylistic-issues

  brace-style: off
  camelcase: [error, {properties: always}]
  comma-dangle: off
  comma-spacing: off
  comma-style: off
  computed-property-spacing: off
  consistent-this: off
  eol-last: off
  func-call-spacing: off
  func-names: off
  func-style: off
  id-length: off
  id-match: [error, "^(?:_?[a-zA-Z0-9]*)|[_A-Z0-9]+$"]
  indent: off
  key-spacing: off
  keyword-spacing: off
  linebreak-style: error
  lines-around-comment: off
  max-depth: off
  max-len: off
  max-nested-callbacks: off
  max-params: off
  max-statements: off
  new-cap: off
  new-parens: off
  no-array-constructor: error
  no-bitwise: off
  no-continue: off
  no-inline-comments: off
  no-lonely-if: error
  no-mixed-spaces-and-tabs: off
  no-multiple-empty-lines: off
  no-nested-ternary: off
  no-new-object: error
  no-plusplus: off
  no-spaced-func: off
  no-ternary: off
  no-trailing-spaces: off
  no-underscore-dangle: off
  no-unneeded-ternary: error
  object-curly-spacing: [off, always]
  one-var: [error, never]
  operator-assignment: [error, always]
  padded-blocks: off
  padding-line-between-statements: off
  quote-props: off
  semi: off
  semi-spacing: off
  sort-vars: off
  space-before-blocks: off
  space-in-parens: off
  space-infix-ops: off
  space-unary-ops: off
  spaced-comment: [error, always]
  wrap-regex: off

  # ECMAScript 6
  # https://eslint.org/docs/rules/#ecmascript-6

  arrow-parens: off
  arrow-spacing: off
  no-class-assign: error
  no-const-assign: error
  no-this-before-super: error
  no-var: error
  object-shorthand: [error, always]
  prefer-const: error
  prefer-spread: off
  require-yield: off

overrides:
  - files: "*"
    excludedFiles: "**/__tests__/**"
    rules:
      no-async: error
