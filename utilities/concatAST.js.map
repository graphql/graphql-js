{"version":3,"file":"concatAST.js","sourceRoot":"","sources":["../../src/utilities/concatAST.ts"],"names":[],"mappings":";;AAQA,8BAQC;AAfD,mDAA4C;AAE5C;;;;GAIG;AACH,SAAgB,SAAS,CACvB,SAAsC;IAEtC,MAAM,WAAW,GAA0B,EAAE,CAAC;IAC9C,KAAK,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC;QAC5B,WAAW,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;IACD,OAAO,EAAE,IAAI,EAAE,eAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,CAAC;AAC9C,CAAC","sourcesContent":["import type { DefinitionNode, DocumentNode } from '../language/ast.js';\nimport { Kind } from '../language/kinds.js';\n\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\nexport function concatAST(\n  documents: ReadonlyArray<DocumentNode>,\n): DocumentNode {\n  const definitions: Array<DefinitionNode> = [];\n  for (const doc of documents) {\n    definitions.push(...doc.definitions);\n  }\n  return { kind: Kind.DOCUMENT, definitions };\n}\n"]}