{"version":3,"file":"predicates.js","sourceRoot":"","sources":["../../src/language/predicates.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  ASTNode,\n  ConstValueNode,\n  DefinitionNode,\n  ExecutableDefinitionNode,\n  SelectionNode,\n  TypeDefinitionNode,\n  TypeExtensionNode,\n  TypeNode,\n  TypeSystemDefinitionNode,\n  TypeSystemExtensionNode,\n  ValueNode,\n} from './ast.js';\nimport { Kind } from './kinds.js';\n\nexport function isDefinitionNode(node: ASTNode): node is DefinitionNode {\n  return (\n    isExecutableDefinitionNode(node) ||\n    isTypeSystemDefinitionNode(node) ||\n    isTypeSystemExtensionNode(node)\n  );\n}\n\nexport function isExecutableDefinitionNode(\n  node: ASTNode,\n): node is ExecutableDefinitionNode {\n  return (\n    node.kind === Kind.OPERATION_DEFINITION ||\n    node.kind === Kind.FRAGMENT_DEFINITION\n  );\n}\n\nexport function isSelectionNode(node: ASTNode): node is SelectionNode {\n  return (\n    node.kind === Kind.FIELD ||\n    node.kind === Kind.FRAGMENT_SPREAD ||\n    node.kind === Kind.INLINE_FRAGMENT\n  );\n}\n\nexport function isValueNode(node: ASTNode): node is ValueNode {\n  return (\n    node.kind === Kind.VARIABLE ||\n    node.kind === Kind.INT ||\n    node.kind === Kind.FLOAT ||\n    node.kind === Kind.STRING ||\n    node.kind === Kind.BOOLEAN ||\n    node.kind === Kind.NULL ||\n    node.kind === Kind.ENUM ||\n    node.kind === Kind.LIST ||\n    node.kind === Kind.OBJECT\n  );\n}\n\nexport function isConstValueNode(node: ASTNode): node is ConstValueNode {\n  return (\n    isValueNode(node) &&\n    (node.kind === Kind.LIST\n      ? node.values.some(isConstValueNode)\n      : node.kind === Kind.OBJECT\n        ? node.fields.some((field) => isConstValueNode(field.value))\n        : node.kind !== Kind.VARIABLE)\n  );\n}\n\nexport function isTypeNode(node: ASTNode): node is TypeNode {\n  return (\n    node.kind === Kind.NAMED_TYPE ||\n    node.kind === Kind.LIST_TYPE ||\n    node.kind === Kind.NON_NULL_TYPE\n  );\n}\n\nexport function isTypeSystemDefinitionNode(\n  node: ASTNode,\n): node is TypeSystemDefinitionNode {\n  return (\n    node.kind === Kind.SCHEMA_DEFINITION ||\n    isTypeDefinitionNode(node) ||\n    node.kind === Kind.DIRECTIVE_DEFINITION\n  );\n}\n\nexport function isTypeDefinitionNode(\n  node: ASTNode,\n): node is TypeDefinitionNode {\n  return (\n    node.kind === Kind.SCALAR_TYPE_DEFINITION ||\n    node.kind === Kind.OBJECT_TYPE_DEFINITION ||\n    node.kind === Kind.INTERFACE_TYPE_DEFINITION ||\n    node.kind === Kind.UNION_TYPE_DEFINITION ||\n    node.kind === Kind.ENUM_TYPE_DEFINITION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION\n  );\n}\n\nexport function isTypeSystemExtensionNode(\n  node: ASTNode,\n): node is TypeSystemExtensionNode {\n  return node.kind === Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node);\n}\n\nexport function isTypeExtensionNode(node: ASTNode): node is TypeExtensionNode {\n  return (\n    node.kind === Kind.SCALAR_TYPE_EXTENSION ||\n    node.kind === Kind.OBJECT_TYPE_EXTENSION ||\n    node.kind === Kind.INTERFACE_TYPE_EXTENSION ||\n    node.kind === Kind.UNION_TYPE_EXTENSION ||\n    node.kind === Kind.ENUM_TYPE_EXTENSION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_EXTENSION\n  );\n}\n"]}