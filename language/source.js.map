{"version":3,"file":"source.js","sourceRoot":"","sources":["../../src/language/source.ts"],"names":[],"mappings":";;;AAgDA,4BAEC;AAlDD,0DAAoD;AACpD,4DAAsD;AAOtD;;;;;;GAMG;AACH,MAAa,MAAM;IAKjB,YACE,IAAY,EACZ,OAAe,iBAAiB,EAChC,iBAA2B,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;QAEjD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,CACE,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,CAAC,SAD9B,wBAAS,SAEP,2DAA2D,EAC3D;QACF,CACE,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,SADhC,wBAAS,SAEP,6DAA6D,EAC7D;IACJ,CAAC;IAED,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;QACtB,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF;AA1BD,wBA0BC;AAED;;;;GAIG;AACH,SAAgB,QAAQ,CAAC,MAAe;IACtC,OAAO,IAAA,0BAAU,EAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACpC,CAAC","sourcesContent":["import { devAssert } from '../jsutils/devAssert.js';\nimport { instanceOf } from '../jsutils/instanceOf.js';\n\ninterface Location {\n  line: number;\n  column: number;\n}\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport class Source {\n  body: string;\n  name: string;\n  locationOffset: Location;\n\n  constructor(\n    body: string,\n    name: string = 'GraphQL request',\n    locationOffset: Location = { line: 1, column: 1 },\n  ) {\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    devAssert(\n      this.locationOffset.line > 0,\n      'line in locationOffset is 1-indexed and must be positive.',\n    );\n    devAssert(\n      this.locationOffset.column > 0,\n      'column in locationOffset is 1-indexed and must be positive.',\n    );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\nexport function isSource(source: unknown): source is Source {\n  return instanceOf(source, Source);\n}\n"]}